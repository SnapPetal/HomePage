import { Component } from './component';
import { Project } from './project';
/**
 * (experimental) If the standard Docker image provided by Gitpod does not include the tools you need for your project, you can provide a custom Docker image OR Dockerfile.
 *
 * https://hub.docker.com/r/gitpod/workspace-full/ is the default Gitpod image
 *
 * @experimental
 */
export interface GitpodDocker {
    /**
     * (experimental) A publicly available image to use.
     *
     * @default - uses the standard gitpod image (see [LINK] above)
     * @experimental
     */
    readonly image?: string;
    /**
     * (experimental) a Dockerfile to install deps.
     *
     * @default
     * @experimental
     * @example
     *
     * {
     *   file: '.gitpod.Docker',
     * }
     */
    readonly file?: string;
}
/**
 * (experimental) Configure how the terminal should be opened relative to the previous task.
 *
 * @experimental
 */
export declare enum GitpodOpenMode {
    /**
     * (experimental) Opens in the same tab group right after the previous tab.
     *
     * @experimental
     */
    TAB_AFTER = "tab-after",
    /**
     * (experimental) Opens in the same tab group left before the previous tab.
     *
     * @experimental
     */
    TAB_BEFORE = "tab-before",
    /**
     * (experimental) Splits and adds the terminal to the right.
     *
     * @experimental
     */
    SPLIT_RIGHT = "split-right",
    /**
     * (experimental) Splits and adds the terminal to the left.
     *
     * @experimental
     */
    SPLIT_LEFT = "split-left",
    /**
     * (experimental) Splits and adds the terminal to the top.
     *
     * @experimental
     */
    SPLIT_TOP = "split-top",
    /**
     * (experimental) Splits and adds the terminal to the bottom.
     *
     * @experimental
     */
    SPLIT_BOTTOM = "split-bottom"
}
/**
 * (experimental) Configure where in the IDE the terminal should be opened.
 *
 * @experimental
 */
export declare enum GitpodOpenIn {
    /**
     * (experimental) the bottom panel (default).
     *
     * @experimental
     */
    BOTTOM = "bottom",
    /**
     * (experimental) the left panel.
     *
     * @experimental
     */
    LEFT = "left",
    /**
     * (experimental) the right panel.
     *
     * @experimental
     */
    RIGHT = "right",
    /**
     * (experimental) the main editor area.
     *
     * @experimental
     */
    MAIN = "main"
}
/**
 * (experimental) Configure options for a task to be run when opening a Gitpod workspace (e.g. running tests, or starting a dev server).
 *
 * Start Mode         | Execution
 * Fresh Workspace    | before && init && command
 * Restart Workspace  | before && command
 * Snapshot           | before && command
 * Prebuild           | before && init && prebuild
 *
 * @experimental
 */
export interface GitpodTask {
    /**
     * (experimental) Required.
     *
     * What to run
     *
     * @experimental
     */
    readonly command: string;
    /**
     * (experimental) A name for this.
     *
     * @default - task names are omitted when blank like GH actions
     * @experimental
     */
    readonly name?: string;
    /**
     * (experimental) You can configure how the terminal should be opened relative to the previous task.
     *
     * @default GitpodOpenMode.TAB_AFTER
     * @experimental
     */
    readonly openMode?: GitpodOpenMode;
    /**
     * (experimental) You can configure where in the IDE the terminal should be opened.
     *
     * @default GitpodOpenIn.BOTTOM
     * @experimental
     */
    readonly openIn?: GitpodOpenIn;
    /**
     * (experimental) In case you need to run something even before init, that is a requirement for both init and command, you can use the before property.
     *
     * @default
     * @experimental
     */
    readonly before?: string;
    /**
     * (experimental) The init property can be used to specify shell commands that should only be executed after a workspace was freshly cloned and needs to be initialized somehow.
     *
     * Such tasks are usually builds or downloading
     * dependencies. Anything you only want to do once but not when you restart a workspace or start a snapshot.
     *
     * @default
     * @experimental
     */
    readonly init?: string;
    /**
     * (experimental) The optional prebuild command will be executed during prebuilds.
     *
     * It is meant to run additional long running
     * processes that could be useful, e.g. running test suites.
     *
     * @default
     * @experimental
     */
    readonly prebuild?: string;
}
/**
 * (experimental) What can we configure for the GitPod component.
 *
 * @experimental
 */
export interface GitpodOptions {
    /**
     * (experimental) Optional Docker Configuration Gitpod defaults to https://github.com/gitpod-io/workspace-images/blob/master/full/Dockerfile if this is unset, so undefined here means `gitpod/workspace-full`.
     *
     * @default undefined
     * @experimental
     */
    readonly docker?: GitpodDocker;
    /**
     * (experimental) This must be defaulted per project.
     *
     * @default []
     * @experimental
     */
    readonly tasks?: GitpodTask[];
}
/**
 * (experimental) The Gitpod component which emits .gitpod.yml.
 *
 * @experimental
 */
export declare class Gitpod extends Component {
    private readonly tasks;
    private docker;
    /**
     * @experimental
     */
    constructor(project: Project, options?: GitpodOptions);
    /**
     * (experimental) Specify a customer docker setup.
     *
     * @experimental
     */
    addCustomDocker(docker: GitpodDocker): void;
    /**
     * (experimental) Adds another task to the Gitpod configuration.
     *
     * @param tasks The additional tasks.
     * @experimental
     */
    addTasks(...tasks: GitpodTask[]): void;
    private renderTasks;
    private renderDockerImage;
}
