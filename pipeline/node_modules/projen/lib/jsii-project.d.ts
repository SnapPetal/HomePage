import { Eslint } from './eslint';
import { JestOptions } from './jest';
import { NodeProjectCommonOptions } from './node-project';
import { TypeScriptProject } from './typescript';
/**
 * @experimental
 */
export interface JsiiProjectOptions extends NodeProjectCommonOptions {
    /**
     * @default "."
     * @experimental
     */
    readonly rootdir?: string;
    /**
     * (experimental) The name of the library.
     *
     * @default $BASEDIR
     * @experimental
     */
    readonly name: string;
    /**
     * (experimental) Library description.
     *
     * @experimental
     */
    readonly description?: string;
    /**
     * (experimental) Git repository URL.
     *
     * @default $GIT_REMOTE
     * @experimental
     */
    readonly repository: string;
    /**
     * (experimental) The name of the library author.
     *
     * @default $GIT_USER_NAME
     * @experimental
     */
    readonly authorName: string;
    /**
     * (experimental) Email or URL of the library author.
     *
     * @default $GIT_USER_EMAIL
     * @experimental
     */
    readonly authorAddress: string;
    /**
     * @deprecated use `authorAddress`
     */
    readonly authorEmail?: string;
    /**
     * @deprecated use `authorAddress`
     */
    readonly authorUrl?: string;
    /**
     * @experimental
     */
    readonly authorOrganization?: boolean;
    /**
     * @experimental
     */
    readonly license?: string;
    /**
     * @experimental
     */
    readonly stability?: string;
    /**
     * @experimental
     */
    readonly java?: JsiiJavaTarget;
    /**
     * @experimental
     */
    readonly python?: JsiiPythonTarget;
    /**
     * @experimental
     */
    readonly dotnet?: JsiiDotNetTarget;
    /**
     * (experimental) Install eslint.
     *
     * @default true
     * @experimental
     */
    readonly eslint?: boolean;
    /**
     * (experimental) Use jest for unit tests.
     *
     * @default true
     * @experimental
     */
    readonly jest?: boolean;
    /**
     * (experimental) Jest options.
     *
     * @default - defaults
     * @experimental
     */
    readonly jestOptions?: JestOptions;
    /**
     * (experimental) Automatically generate API.md from jsii.
     *
     * @default true
     * @experimental
     */
    readonly docgen?: boolean;
    /**
     * (experimental) Automatically run API compatibility test against the latest version published to npm after compilation.
     *
     * - You can manually run compatibility tests using `yarn compat` if this feature is disabled.
     * - You can ignore compatibility failures by adding lines to a ".compatignore" file.
     *
     * @default false
     * @experimental
     */
    readonly compat?: boolean;
    /**
     * (experimental) Name of the ignore file for API compatibility tests.
     *
     * @default ".compatignore"
     * @experimental
     */
    readonly compatIgnore?: string;
}
/**
 * @experimental
 */
export declare enum Stability {
    /**
     * @experimental
     */
    EXPERIMENTAL = "experimental",
    /**
     * @experimental
     */
    STABLE = "stable",
    /**
     * @experimental
     */
    DEPRECATED = "deprecated"
}
/**
 * @experimental
 */
export interface JsiiJavaTarget {
    /**
     * @experimental
     */
    readonly javaPackage: string;
    /**
     * @experimental
     */
    readonly mavenGroupId: string;
    /**
     * @experimental
     */
    readonly mavenArtifactId: string;
}
/**
 * @experimental
 */
export interface JsiiPythonTarget {
    /**
     * @experimental
     */
    readonly distName: string;
    /**
     * @experimental
     */
    readonly module: string;
    /**
     * (experimental) The registry url to use when releasing packages.
     *
     * @default - twine default
     * @experimental
     */
    readonly twineRegistryUrl?: string;
}
/**
 * @experimental
 */
export interface JsiiDotNetTarget {
    /**
     * @experimental
     */
    readonly dotNetNamespace: string;
    /**
     * @experimental
     */
    readonly packageId: string;
}
/**
 * (experimental) Multi-language jsii library project.
 *
 * @experimental
 */
export declare class JsiiProject extends TypeScriptProject {
    /**
     * @experimental
     */
    readonly eslint?: Eslint;
    /**
     * @experimental
     */
    protected readonly twineRegistryUrl?: string;
    /**
     * @experimental
     */
    constructor(options: JsiiProjectOptions);
    private publishToNpm;
    private publishToNuget;
    private publishToMaven;
    private publishToPyPi;
}
