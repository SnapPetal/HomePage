"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IgnoreFile = void 0;
const file_1 = require("./file");
/**
 * @experimental
 */
class IgnoreFile extends file_1.FileBase {
    /**
     * @experimental
     */
    constructor(project, filePath) {
        super(project, filePath, { editGitignore: filePath !== '.gitignore' });
        this.excludes = new Array();
        this.includes = new Array();
    }
    /**
     * @experimental
     */
    exclude(...patterns) {
        this.excludes.push(...patterns);
    }
    /**
     * @experimental
     */
    include(...patterns) {
        this.includes.push(...patterns);
    }
    /**
     * (experimental) Implemented by derived classes and returns the contents of the file to emit.
     *
     * @experimental
     */
    synthesizeContent(resolver) {
        return resolver.resolve([
            `# ${file_1.FileBase.PROJEN_MARKER}`,
            ...this.excludes,
            // includes must follow excludes
            ...this.includes.map(x => `!${x}`),
        ]).join('\n');
    }
}
exports.IgnoreFile = IgnoreFile;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWdub3JlLWZpbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaWdub3JlLWZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUNBQTZDOzs7O0FBRzdDLE1BQWEsVUFBVyxTQUFRLGVBQVE7Ozs7SUFJdEMsWUFBWSxPQUFnQixFQUFFLFFBQWdCO1FBQzVDLEtBQUssQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLEVBQUUsYUFBYSxFQUFFLFFBQVEsS0FBSyxZQUFZLEVBQUUsQ0FBQyxDQUFDO1FBSnhELGFBQVEsR0FBRyxJQUFJLEtBQUssRUFBVSxDQUFDO1FBQy9CLGFBQVEsR0FBRyxJQUFJLEtBQUssRUFBVSxDQUFDO0lBSWhELENBQUM7Ozs7SUFFTSxPQUFPLENBQUMsR0FBRyxRQUFrQjtRQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Ozs7SUFFTSxPQUFPLENBQUMsR0FBRyxRQUFrQjtRQUNsQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDLENBQUM7Ozs7OztJQUVTLGlCQUFpQixDQUFDLFFBQW1CO1FBQzdDLE9BQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQztZQUN0QixLQUFLLGVBQVEsQ0FBQyxhQUFhLEVBQUU7WUFDN0IsR0FBRyxJQUFJLENBQUMsUUFBUTtZQUVoQixnQ0FBZ0M7WUFDaEMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUM7U0FDbkMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQixDQUFDO0NBQ0Y7QUF6QkQsZ0NBeUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmlsZUJhc2UsIElSZXNvbHZlciB9IGZyb20gJy4vZmlsZSc7XG5pbXBvcnQgeyBQcm9qZWN0IH0gZnJvbSAnLi9wcm9qZWN0JztcblxuZXhwb3J0IGNsYXNzIElnbm9yZUZpbGUgZXh0ZW5kcyBGaWxlQmFzZSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgZXhjbHVkZXMgPSBuZXcgQXJyYXk8c3RyaW5nPigpO1xuICBwcml2YXRlIHJlYWRvbmx5IGluY2x1ZGVzID0gbmV3IEFycmF5PHN0cmluZz4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcm9qZWN0OiBQcm9qZWN0LCBmaWxlUGF0aDogc3RyaW5nKSB7XG4gICAgc3VwZXIocHJvamVjdCwgZmlsZVBhdGgsIHsgZWRpdEdpdGlnbm9yZTogZmlsZVBhdGggIT09ICcuZ2l0aWdub3JlJyB9KTtcbiAgfVxuXG4gIHB1YmxpYyBleGNsdWRlKC4uLnBhdHRlcm5zOiBzdHJpbmdbXSkge1xuICAgIHRoaXMuZXhjbHVkZXMucHVzaCguLi5wYXR0ZXJucyk7XG4gIH1cblxuICBwdWJsaWMgaW5jbHVkZSguLi5wYXR0ZXJuczogc3RyaW5nW10pIHtcbiAgICB0aGlzLmluY2x1ZGVzLnB1c2goLi4ucGF0dGVybnMpO1xuICB9XG5cbiAgcHJvdGVjdGVkIHN5bnRoZXNpemVDb250ZW50KHJlc29sdmVyOiBJUmVzb2x2ZXIpOiBzdHJpbmcge1xuICAgIHJldHVybiByZXNvbHZlci5yZXNvbHZlKFtcbiAgICAgIGAjICR7RmlsZUJhc2UuUFJPSkVOX01BUktFUn1gLFxuICAgICAgLi4udGhpcy5leGNsdWRlcyxcblxuICAgICAgLy8gaW5jbHVkZXMgbXVzdCBmb2xsb3cgZXhjbHVkZXNcbiAgICAgIC4uLnRoaXMuaW5jbHVkZXMubWFwKHggPT4gYCEke3h9YCksXG4gICAgXSkuam9pbignXFxuJyk7XG4gIH1cbn1cblxuXG4iXX0=