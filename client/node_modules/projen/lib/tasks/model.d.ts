import { TaskCommonOptions } from './task';
/**
 * (experimental) Schema for `tasks.json`.
 *
 * @experimental
 */
export interface TasksManifest {
    /**
     * (experimental) All tasks available for this project.
     *
     * @experimental
     */
    readonly tasks?: {
        [name: string]: TaskSpec;
    };
    /**
     * (experimental) Environment for all tasks.
     *
     * @experimental
     */
    readonly env?: {
        [name: string]: string;
    };
}
/**
 * (experimental) Specification of a single task.
 *
 * @experimental
 */
export interface TaskSpec extends TaskCommonOptions {
    /**
     * (experimental) Task name.
     *
     * @experimental
     */
    readonly name: string;
    /**
     * (experimental) Task steps.
     *
     * @experimental
     */
    readonly steps?: TaskStep[];
}
/**
 * (experimental) Options for task steps.
 *
 * @experimental
 */
export interface TaskStepOptions {
    /**
     * (experimental) Step name.
     *
     * @default - no name
     * @experimental
     */
    readonly name?: string;
}
/**
 * (experimental) A single step within a task.
 *
 * The step could either be  the execution of a
 * shell command or execution of a sub-task, by name.
 *
 * @experimental
 */
export interface TaskStep extends TaskStepOptions {
    /**
     * (experimental) Shell command to execute.
     *
     * @default - don't execute a shell command
     * @experimental
     */
    readonly exec?: string;
    /**
     * (experimental) Subtask to execute.
     *
     * @default - don't spawn a subtask
     * @experimental
     */
    readonly spawn?: string;
}
