import * as cdk from "@aws-cdk/core";
import * as lambda from "@aws-cdk/aws-lambda";
import * as s3 from "@aws-cdk/aws-s3";
import * as cloudfront from "@aws-cdk/aws-cloudfront";
import { ARecord } from "@aws-cdk/aws-route53";
import * as sqs from "@aws-cdk/aws-sqs";
import { Role } from "@aws-cdk/aws-iam";
import { Props } from "./props";
export * from "./props";
export declare class NextJSLambdaEdge extends cdk.Construct {
    private props;
    private routesManifest;
    private apiBuildManifest;
    private imageManifest;
    private defaultManifest;
    private prerenderManifest;
    distribution: cloudfront.Distribution;
    bucket: s3.Bucket;
    edgeLambdaRole: Role;
    defaultNextLambda: lambda.Function;
    nextApiLambda: lambda.Function | null;
    nextImageLambda: lambda.Function | null;
    nextStaticsCachePolicy: cloudfront.CachePolicy;
    nextImageCachePolicy: cloudfront.CachePolicy;
    nextLambdaCachePolicy: cloudfront.CachePolicy;
    aRecord?: ARecord;
    regenerationQueue?: sqs.Queue;
    regenerationFunction?: lambda.Function;
    constructor(scope: cdk.Construct, id: string, props: Props);
    private pathPattern;
    private readRoutesManifest;
    private readDefaultManifest;
    private readPrerenderManifest;
    private readApiBuildManifest;
    private readImageBuildManifest;
}
